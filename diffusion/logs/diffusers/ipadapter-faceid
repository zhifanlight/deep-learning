
faceid_embeds.size: torch.Size([1, 512])
image_prompt_embeds.size: torch.Size([1, 4, 768])  # image_prompt_embeds = self.image_proj_model(faceid_embeds)
prompt_embeds_.size: torch.Size([1, 77, 768])
prompt_embeds.size: torch.Size([1, 81, 768])  # prompt_embeds = torch.cat([prompt_embeds_, image_prompt_embeds], dim=1)

# Based on official repo, before 20240312
MLPProjModel(
  (proj): Sequential(
    (0): Linear(in_features=512, out_features=1024, bias=True)
    (1): GELU(approximate='none')
    (2): Linear(in_features=1024, out_features=3072, bias=True)
  )
  (norm): LayerNorm((768,), eps=1e-05, elementwise_affine=True)
)



UNet2DConditionModel(
  (conv_in): Conv2d(4, 320, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (time_proj): Timesteps()
  (time_embedding): TimestepEmbedding(
    (linear_1): Linear(in_features=320, out_features=1280, bias=True)
    (act): SiLU()
    (linear_2): Linear(in_features=1280, out_features=1280, bias=True)
  )
  (down_blocks): ModuleList(
    (0): CrossAttnDownBlock2D(
      (attentions): ModuleList(
        (0-1): 2 x Transformer2DModel(
          (norm): GroupNorm(32, 320, eps=1e-06, affine=True)
          (proj_in): Conv2d(320, 320, kernel_size=(1, 1), stride=(1, 1))
          (transformer_blocks): ModuleList(
            (0): BasicTransformerBlock(
              (norm1): LayerNorm((320,), eps=1e-05, elementwise_affine=True)
              (attn1): Attention(
                (to_q): Linear(in_features=320, out_features=320, bias=False)
                (to_k): Linear(in_features=320, out_features=320, bias=False)
                (to_v): Linear(in_features=320, out_features=320, bias=False)
                (to_out): ModuleList(
                  (0): Linear(in_features=320, out_features=320, bias=True)
                  (1): Dropout(p=0.0, inplace=False)
                )
                (processor): LoRAAttnProcessor(
                  (to_q_lora): LoRALinearLayer(
                    (down): Linear(in_features=320, out_features=128, bias=False)
                    (up): Linear(in_features=128, out_features=320, bias=False)
                  )
                  (to_k_lora): LoRALinearLayer(
                    (down): Linear(in_features=320, out_features=128, bias=False)
                    (up): Linear(in_features=128, out_features=320, bias=False)
                  )
                  (to_v_lora): LoRALinearLayer(
                    (down): Linear(in_features=320, out_features=128, bias=False)
                    (up): Linear(in_features=128, out_features=320, bias=False)
                  )
                  (to_out_lora): LoRALinearLayer(
                    (down): Linear(in_features=320, out_features=128, bias=False)
                    (up): Linear(in_features=128, out_features=320, bias=False)
                  )
                )
              )
              (norm2): LayerNorm((320,), eps=1e-05, elementwise_affine=True)
              (attn2): Attention(
                (to_q): Linear(in_features=320, out_features=320, bias=False)
                (to_k): Linear(in_features=768, out_features=320, bias=False)
                (to_v): Linear(in_features=768, out_features=320, bias=False)
                (to_out): ModuleList(
                  (0): Linear(in_features=320, out_features=320, bias=True)
                  (1): Dropout(p=0.0, inplace=False)
                )
                (processor): LoRAIPAttnProcessor(
                  (to_q_lora): LoRALinearLayer(
                    (down): Linear(in_features=320, out_features=128, bias=False)
                    (up): Linear(in_features=128, out_features=320, bias=False)
                  )
                  (to_k_lora): LoRALinearLayer(
                    (down): Linear(in_features=768, out_features=128, bias=False)
                    (up): Linear(in_features=128, out_features=320, bias=False)
                  )
                  (to_v_lora): LoRALinearLayer(
                    (down): Linear(in_features=768, out_features=128, bias=False)
                    (up): Linear(in_features=128, out_features=320, bias=False)
                  )
                  (to_out_lora): LoRALinearLayer(
                    (down): Linear(in_features=320, out_features=128, bias=False)
                    (up): Linear(in_features=128, out_features=320, bias=False)
                  )
                  (to_k_ip): Linear(in_features=768, out_features=320, bias=False)
                  (to_v_ip): Linear(in_features=768, out_features=320, bias=False)
                )
              )
              (norm3): LayerNorm((320,), eps=1e-05, elementwise_affine=True)
              (ff): FeedForward(
                (net): ModuleList(
                  (0): GEGLU(
                    (proj): Linear(in_features=320, out_features=2560, bias=True)
                  )
                  (1): Dropout(p=0.0, inplace=False)
                  (2): Linear(in_features=1280, out_features=320, bias=True)
                )
              )
            )
          )
          (proj_out): Conv2d(320, 320, kernel_size=(1, 1), stride=(1, 1))
        )
      )
      (resnets): ModuleList(
        (0-1): 2 x ResnetBlock2D(
          (norm1): GroupNorm(32, 320, eps=1e-05, affine=True)
          (conv1): Conv2d(320, 320, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (time_emb_proj): Linear(in_features=1280, out_features=320, bias=True)
          (norm2): GroupNorm(32, 320, eps=1e-05, affine=True)
          (dropout): Dropout(p=0.0, inplace=False)
          (conv2): Conv2d(320, 320, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (nonlinearity): SiLU()
        )
      )
      (downsamplers): ModuleList(
        (0): Downsample2D(
          (conv): Conv2d(320, 320, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1))
        )
      )
    )
    (1): CrossAttnDownBlock2D(
      (attentions): ModuleList(
        (0-1): 2 x Transformer2DModel(
          (norm): GroupNorm(32, 640, eps=1e-06, affine=True)
          (proj_in): Conv2d(640, 640, kernel_size=(1, 1), stride=(1, 1))
          (transformer_blocks): ModuleList(
            (0): BasicTransformerBlock(
              (norm1): LayerNorm((640,), eps=1e-05, elementwise_affine=True)
              (attn1): Attention(
                (to_q): Linear(in_features=640, out_features=640, bias=False)
                (to_k): Linear(in_features=640, out_features=640, bias=False)
                (to_v): Linear(in_features=640, out_features=640, bias=False)
                (to_out): ModuleList(
                  (0): Linear(in_features=640, out_features=640, bias=True)
                  (1): Dropout(p=0.0, inplace=False)
                )
                (processor): LoRAAttnProcessor(
                  (to_q_lora): LoRALinearLayer(
                    (down): Linear(in_features=640, out_features=128, bias=False)
                    (up): Linear(in_features=128, out_features=640, bias=False)
                  )
                  (to_k_lora): LoRALinearLayer(
                    (down): Linear(in_features=640, out_features=128, bias=False)
                    (up): Linear(in_features=128, out_features=640, bias=False)
                  )
                  (to_v_lora): LoRALinearLayer(
                    (down): Linear(in_features=640, out_features=128, bias=False)
                    (up): Linear(in_features=128, out_features=640, bias=False)
                  )
                  (to_out_lora): LoRALinearLayer(
                    (down): Linear(in_features=640, out_features=128, bias=False)
                    (up): Linear(in_features=128, out_features=640, bias=False)
                  )
                )
              )
              (norm2): LayerNorm((640,), eps=1e-05, elementwise_affine=True)
              (attn2): Attention(
                (to_q): Linear(in_features=640, out_features=640, bias=False)
                (to_k): Linear(in_features=768, out_features=640, bias=False)
                (to_v): Linear(in_features=768, out_features=640, bias=False)
                (to_out): ModuleList(
                  (0): Linear(in_features=640, out_features=640, bias=True)
                  (1): Dropout(p=0.0, inplace=False)
                )
                (processor): LoRAIPAttnProcessor(
                  (to_q_lora): LoRALinearLayer(
                    (down): Linear(in_features=640, out_features=128, bias=False)
                    (up): Linear(in_features=128, out_features=640, bias=False)
                  )
                  (to_k_lora): LoRALinearLayer(
                    (down): Linear(in_features=768, out_features=128, bias=False)
                    (up): Linear(in_features=128, out_features=640, bias=False)
                  )
                  (to_v_lora): LoRALinearLayer(
                    (down): Linear(in_features=768, out_features=128, bias=False)
                    (up): Linear(in_features=128, out_features=640, bias=False)
                  )
                  (to_out_lora): LoRALinearLayer(
                    (down): Linear(in_features=640, out_features=128, bias=False)
                    (up): Linear(in_features=128, out_features=640, bias=False)
                  )
                  (to_k_ip): Linear(in_features=768, out_features=640, bias=False)
                  (to_v_ip): Linear(in_features=768, out_features=640, bias=False)
                )
              )
              (norm3): LayerNorm((640,), eps=1e-05, elementwise_affine=True)
              (ff): FeedForward(
                (net): ModuleList(
                  (0): GEGLU(
                    (proj): Linear(in_features=640, out_features=5120, bias=True)
                  )
                  (1): Dropout(p=0.0, inplace=False)
                  (2): Linear(in_features=2560, out_features=640, bias=True)
                )
              )
            )
          )
          (proj_out): Conv2d(640, 640, kernel_size=(1, 1), stride=(1, 1))
        )
      )
      (resnets): ModuleList(
        (0): ResnetBlock2D(
          (norm1): GroupNorm(32, 320, eps=1e-05, affine=True)
          (conv1): Conv2d(320, 640, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (time_emb_proj): Linear(in_features=1280, out_features=640, bias=True)
          (norm2): GroupNorm(32, 640, eps=1e-05, affine=True)
          (dropout): Dropout(p=0.0, inplace=False)
          (conv2): Conv2d(640, 640, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (nonlinearity): SiLU()
          (conv_shortcut): Conv2d(320, 640, kernel_size=(1, 1), stride=(1, 1))
        )
        (1): ResnetBlock2D(
          (norm1): GroupNorm(32, 640, eps=1e-05, affine=True)
          (conv1): Conv2d(640, 640, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (time_emb_proj): Linear(in_features=1280, out_features=640, bias=True)
          (norm2): GroupNorm(32, 640, eps=1e-05, affine=True)
          (dropout): Dropout(p=0.0, inplace=False)
          (conv2): Conv2d(640, 640, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (nonlinearity): SiLU()
        )
      )
      (downsamplers): ModuleList(
        (0): Downsample2D(
          (conv): Conv2d(640, 640, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1))
        )
      )
    )
    (2): CrossAttnDownBlock2D(
      (attentions): ModuleList(
        (0-1): 2 x Transformer2DModel(
          (norm): GroupNorm(32, 1280, eps=1e-06, affine=True)
          (proj_in): Conv2d(1280, 1280, kernel_size=(1, 1), stride=(1, 1))
          (transformer_blocks): ModuleList(
            (0): BasicTransformerBlock(
              (norm1): LayerNorm((1280,), eps=1e-05, elementwise_affine=True)
              (attn1): Attention(
                (to_q): Linear(in_features=1280, out_features=1280, bias=False)
                (to_k): Linear(in_features=1280, out_features=1280, bias=False)
                (to_v): Linear(in_features=1280, out_features=1280, bias=False)
                (to_out): ModuleList(
                  (0): Linear(in_features=1280, out_features=1280, bias=True)
                  (1): Dropout(p=0.0, inplace=False)
                )
                (processor): LoRAAttnProcessor(
                  (to_q_lora): LoRALinearLayer(
                    (down): Linear(in_features=1280, out_features=128, bias=False)
                    (up): Linear(in_features=128, out_features=1280, bias=False)
                  )
                  (to_k_lora): LoRALinearLayer(
                    (down): Linear(in_features=1280, out_features=128, bias=False)
                    (up): Linear(in_features=128, out_features=1280, bias=False)
                  )
                  (to_v_lora): LoRALinearLayer(
                    (down): Linear(in_features=1280, out_features=128, bias=False)
                    (up): Linear(in_features=128, out_features=1280, bias=False)
                  )
                  (to_out_lora): LoRALinearLayer(
                    (down): Linear(in_features=1280, out_features=128, bias=False)
                    (up): Linear(in_features=128, out_features=1280, bias=False)
                  )
                )
              )
              (norm2): LayerNorm((1280,), eps=1e-05, elementwise_affine=True)
              (attn2): Attention(
                (to_q): Linear(in_features=1280, out_features=1280, bias=False)
                (to_k): Linear(in_features=768, out_features=1280, bias=False)
                (to_v): Linear(in_features=768, out_features=1280, bias=False)
                (to_out): ModuleList(
                  (0): Linear(in_features=1280, out_features=1280, bias=True)
                  (1): Dropout(p=0.0, inplace=False)
                )
                (processor): LoRAIPAttnProcessor(
                  (to_q_lora): LoRALinearLayer(
                    (down): Linear(in_features=1280, out_features=128, bias=False)
                    (up): Linear(in_features=128, out_features=1280, bias=False)
                  )
                  (to_k_lora): LoRALinearLayer(
                    (down): Linear(in_features=768, out_features=128, bias=False)
                    (up): Linear(in_features=128, out_features=1280, bias=False)
                  )
                  (to_v_lora): LoRALinearLayer(
                    (down): Linear(in_features=768, out_features=128, bias=False)
                    (up): Linear(in_features=128, out_features=1280, bias=False)
                  )
                  (to_out_lora): LoRALinearLayer(
                    (down): Linear(in_features=1280, out_features=128, bias=False)
                    (up): Linear(in_features=128, out_features=1280, bias=False)
                  )
                  (to_k_ip): Linear(in_features=768, out_features=1280, bias=False)
                  (to_v_ip): Linear(in_features=768, out_features=1280, bias=False)
                )
              )
              (norm3): LayerNorm((1280,), eps=1e-05, elementwise_affine=True)
              (ff): FeedForward(
                (net): ModuleList(
                  (0): GEGLU(
                    (proj): Linear(in_features=1280, out_features=10240, bias=True)
                  )
                  (1): Dropout(p=0.0, inplace=False)
                  (2): Linear(in_features=5120, out_features=1280, bias=True)
                )
              )
            )
          )
          (proj_out): Conv2d(1280, 1280, kernel_size=(1, 1), stride=(1, 1))
        )
      )
      (resnets): ModuleList(
        (0): ResnetBlock2D(
          (norm1): GroupNorm(32, 640, eps=1e-05, affine=True)
          (conv1): Conv2d(640, 1280, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (time_emb_proj): Linear(in_features=1280, out_features=1280, bias=True)
          (norm2): GroupNorm(32, 1280, eps=1e-05, affine=True)
          (dropout): Dropout(p=0.0, inplace=False)
          (conv2): Conv2d(1280, 1280, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (nonlinearity): SiLU()
          (conv_shortcut): Conv2d(640, 1280, kernel_size=(1, 1), stride=(1, 1))
        )
        (1): ResnetBlock2D(
          (norm1): GroupNorm(32, 1280, eps=1e-05, affine=True)
          (conv1): Conv2d(1280, 1280, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (time_emb_proj): Linear(in_features=1280, out_features=1280, bias=True)
          (norm2): GroupNorm(32, 1280, eps=1e-05, affine=True)
          (dropout): Dropout(p=0.0, inplace=False)
          (conv2): Conv2d(1280, 1280, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (nonlinearity): SiLU()
        )
      )
      (downsamplers): ModuleList(
        (0): Downsample2D(
          (conv): Conv2d(1280, 1280, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1))
        )
      )
    )
    (3): DownBlock2D(
      (resnets): ModuleList(
        (0-1): 2 x ResnetBlock2D(
          (norm1): GroupNorm(32, 1280, eps=1e-05, affine=True)
          (conv1): Conv2d(1280, 1280, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (time_emb_proj): Linear(in_features=1280, out_features=1280, bias=True)
          (norm2): GroupNorm(32, 1280, eps=1e-05, affine=True)
          (dropout): Dropout(p=0.0, inplace=False)
          (conv2): Conv2d(1280, 1280, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (nonlinearity): SiLU()
        )
      )
    )
  )
  (up_blocks): ModuleList(
    (0): UpBlock2D(
      (resnets): ModuleList(
        (0-2): 3 x ResnetBlock2D(
          (norm1): GroupNorm(32, 2560, eps=1e-05, affine=True)
          (conv1): Conv2d(2560, 1280, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (time_emb_proj): Linear(in_features=1280, out_features=1280, bias=True)
          (norm2): GroupNorm(32, 1280, eps=1e-05, affine=True)
          (dropout): Dropout(p=0.0, inplace=False)
          (conv2): Conv2d(1280, 1280, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (nonlinearity): SiLU()
          (conv_shortcut): Conv2d(2560, 1280, kernel_size=(1, 1), stride=(1, 1))
        )
      )
      (upsamplers): ModuleList(
        (0): Upsample2D(
          (conv): Conv2d(1280, 1280, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        )
      )
    )
    (1): CrossAttnUpBlock2D(
      (attentions): ModuleList(
        (0-2): 3 x Transformer2DModel(
          (norm): GroupNorm(32, 1280, eps=1e-06, affine=True)
          (proj_in): Conv2d(1280, 1280, kernel_size=(1, 1), stride=(1, 1))
          (transformer_blocks): ModuleList(
            (0): BasicTransformerBlock(
              (norm1): LayerNorm((1280,), eps=1e-05, elementwise_affine=True)
              (attn1): Attention(
                (to_q): Linear(in_features=1280, out_features=1280, bias=False)
                (to_k): Linear(in_features=1280, out_features=1280, bias=False)
                (to_v): Linear(in_features=1280, out_features=1280, bias=False)
                (to_out): ModuleList(
                  (0): Linear(in_features=1280, out_features=1280, bias=True)
                  (1): Dropout(p=0.0, inplace=False)
                )
                (processor): LoRAAttnProcessor(
                  (to_q_lora): LoRALinearLayer(
                    (down): Linear(in_features=1280, out_features=128, bias=False)
                    (up): Linear(in_features=128, out_features=1280, bias=False)
                  )
                  (to_k_lora): LoRALinearLayer(
                    (down): Linear(in_features=1280, out_features=128, bias=False)
                    (up): Linear(in_features=128, out_features=1280, bias=False)
                  )
                  (to_v_lora): LoRALinearLayer(
                    (down): Linear(in_features=1280, out_features=128, bias=False)
                    (up): Linear(in_features=128, out_features=1280, bias=False)
                  )
                  (to_out_lora): LoRALinearLayer(
                    (down): Linear(in_features=1280, out_features=128, bias=False)
                    (up): Linear(in_features=128, out_features=1280, bias=False)
                  )
                )
              )
              (norm2): LayerNorm((1280,), eps=1e-05, elementwise_affine=True)
              (attn2): Attention(
                (to_q): Linear(in_features=1280, out_features=1280, bias=False)
                (to_k): Linear(in_features=768, out_features=1280, bias=False)
                (to_v): Linear(in_features=768, out_features=1280, bias=False)
                (to_out): ModuleList(
                  (0): Linear(in_features=1280, out_features=1280, bias=True)
                  (1): Dropout(p=0.0, inplace=False)
                )
                (processor): LoRAIPAttnProcessor(
                  (to_q_lora): LoRALinearLayer(
                    (down): Linear(in_features=1280, out_features=128, bias=False)
                    (up): Linear(in_features=128, out_features=1280, bias=False)
                  )
                  (to_k_lora): LoRALinearLayer(
                    (down): Linear(in_features=768, out_features=128, bias=False)
                    (up): Linear(in_features=128, out_features=1280, bias=False)
                  )
                  (to_v_lora): LoRALinearLayer(
                    (down): Linear(in_features=768, out_features=128, bias=False)
                    (up): Linear(in_features=128, out_features=1280, bias=False)
                  )
                  (to_out_lora): LoRALinearLayer(
                    (down): Linear(in_features=1280, out_features=128, bias=False)
                    (up): Linear(in_features=128, out_features=1280, bias=False)
                  )
                  (to_k_ip): Linear(in_features=768, out_features=1280, bias=False)
                  (to_v_ip): Linear(in_features=768, out_features=1280, bias=False)
                )
              )
              (norm3): LayerNorm((1280,), eps=1e-05, elementwise_affine=True)
              (ff): FeedForward(
                (net): ModuleList(
                  (0): GEGLU(
                    (proj): Linear(in_features=1280, out_features=10240, bias=True)
                  )
                  (1): Dropout(p=0.0, inplace=False)
                  (2): Linear(in_features=5120, out_features=1280, bias=True)
                )
              )
            )
          )
          (proj_out): Conv2d(1280, 1280, kernel_size=(1, 1), stride=(1, 1))
        )
      )
      (resnets): ModuleList(
        (0-1): 2 x ResnetBlock2D(
          (norm1): GroupNorm(32, 2560, eps=1e-05, affine=True)
          (conv1): Conv2d(2560, 1280, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (time_emb_proj): Linear(in_features=1280, out_features=1280, bias=True)
          (norm2): GroupNorm(32, 1280, eps=1e-05, affine=True)
          (dropout): Dropout(p=0.0, inplace=False)
          (conv2): Conv2d(1280, 1280, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (nonlinearity): SiLU()
          (conv_shortcut): Conv2d(2560, 1280, kernel_size=(1, 1), stride=(1, 1))
        )
        (2): ResnetBlock2D(
          (norm1): GroupNorm(32, 1920, eps=1e-05, affine=True)
          (conv1): Conv2d(1920, 1280, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (time_emb_proj): Linear(in_features=1280, out_features=1280, bias=True)
          (norm2): GroupNorm(32, 1280, eps=1e-05, affine=True)
          (dropout): Dropout(p=0.0, inplace=False)
          (conv2): Conv2d(1280, 1280, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (nonlinearity): SiLU()
          (conv_shortcut): Conv2d(1920, 1280, kernel_size=(1, 1), stride=(1, 1))
        )
      )
      (upsamplers): ModuleList(
        (0): Upsample2D(
          (conv): Conv2d(1280, 1280, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        )
      )
    )
    (2): CrossAttnUpBlock2D(
      (attentions): ModuleList(
        (0-2): 3 x Transformer2DModel(
          (norm): GroupNorm(32, 640, eps=1e-06, affine=True)
          (proj_in): Conv2d(640, 640, kernel_size=(1, 1), stride=(1, 1))
          (transformer_blocks): ModuleList(
            (0): BasicTransformerBlock(
              (norm1): LayerNorm((640,), eps=1e-05, elementwise_affine=True)
              (attn1): Attention(
                (to_q): Linear(in_features=640, out_features=640, bias=False)
                (to_k): Linear(in_features=640, out_features=640, bias=False)
                (to_v): Linear(in_features=640, out_features=640, bias=False)
                (to_out): ModuleList(
                  (0): Linear(in_features=640, out_features=640, bias=True)
                  (1): Dropout(p=0.0, inplace=False)
                )
                (processor): LoRAAttnProcessor(
                  (to_q_lora): LoRALinearLayer(
                    (down): Linear(in_features=640, out_features=128, bias=False)
                    (up): Linear(in_features=128, out_features=640, bias=False)
                  )
                  (to_k_lora): LoRALinearLayer(
                    (down): Linear(in_features=640, out_features=128, bias=False)
                    (up): Linear(in_features=128, out_features=640, bias=False)
                  )
                  (to_v_lora): LoRALinearLayer(
                    (down): Linear(in_features=640, out_features=128, bias=False)
                    (up): Linear(in_features=128, out_features=640, bias=False)
                  )
                  (to_out_lora): LoRALinearLayer(
                    (down): Linear(in_features=640, out_features=128, bias=False)
                    (up): Linear(in_features=128, out_features=640, bias=False)
                  )
                )
              )
              (norm2): LayerNorm((640,), eps=1e-05, elementwise_affine=True)
              (attn2): Attention(
                (to_q): Linear(in_features=640, out_features=640, bias=False)
                (to_k): Linear(in_features=768, out_features=640, bias=False)
                (to_v): Linear(in_features=768, out_features=640, bias=False)
                (to_out): ModuleList(
                  (0): Linear(in_features=640, out_features=640, bias=True)
                  (1): Dropout(p=0.0, inplace=False)
                )
                (processor): LoRAIPAttnProcessor(
                  (to_q_lora): LoRALinearLayer(
                    (down): Linear(in_features=640, out_features=128, bias=False)
                    (up): Linear(in_features=128, out_features=640, bias=False)
                  )
                  (to_k_lora): LoRALinearLayer(
                    (down): Linear(in_features=768, out_features=128, bias=False)
                    (up): Linear(in_features=128, out_features=640, bias=False)
                  )
                  (to_v_lora): LoRALinearLayer(
                    (down): Linear(in_features=768, out_features=128, bias=False)
                    (up): Linear(in_features=128, out_features=640, bias=False)
                  )
                  (to_out_lora): LoRALinearLayer(
                    (down): Linear(in_features=640, out_features=128, bias=False)
                    (up): Linear(in_features=128, out_features=640, bias=False)
                  )
                  (to_k_ip): Linear(in_features=768, out_features=640, bias=False)
                  (to_v_ip): Linear(in_features=768, out_features=640, bias=False)
                )
              )
              (norm3): LayerNorm((640,), eps=1e-05, elementwise_affine=True)
              (ff): FeedForward(
                (net): ModuleList(
                  (0): GEGLU(
                    (proj): Linear(in_features=640, out_features=5120, bias=True)
                  )
                  (1): Dropout(p=0.0, inplace=False)
                  (2): Linear(in_features=2560, out_features=640, bias=True)
                )
              )
            )
          )
          (proj_out): Conv2d(640, 640, kernel_size=(1, 1), stride=(1, 1))
        )
      )
      (resnets): ModuleList(
        (0): ResnetBlock2D(
          (norm1): GroupNorm(32, 1920, eps=1e-05, affine=True)
          (conv1): Conv2d(1920, 640, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (time_emb_proj): Linear(in_features=1280, out_features=640, bias=True)
          (norm2): GroupNorm(32, 640, eps=1e-05, affine=True)
          (dropout): Dropout(p=0.0, inplace=False)
          (conv2): Conv2d(640, 640, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (nonlinearity): SiLU()
          (conv_shortcut): Conv2d(1920, 640, kernel_size=(1, 1), stride=(1, 1))
        )
        (1): ResnetBlock2D(
          (norm1): GroupNorm(32, 1280, eps=1e-05, affine=True)
          (conv1): Conv2d(1280, 640, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (time_emb_proj): Linear(in_features=1280, out_features=640, bias=True)
          (norm2): GroupNorm(32, 640, eps=1e-05, affine=True)
          (dropout): Dropout(p=0.0, inplace=False)
          (conv2): Conv2d(640, 640, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (nonlinearity): SiLU()
          (conv_shortcut): Conv2d(1280, 640, kernel_size=(1, 1), stride=(1, 1))
        )
        (2): ResnetBlock2D(
          (norm1): GroupNorm(32, 960, eps=1e-05, affine=True)
          (conv1): Conv2d(960, 640, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (time_emb_proj): Linear(in_features=1280, out_features=640, bias=True)
          (norm2): GroupNorm(32, 640, eps=1e-05, affine=True)
          (dropout): Dropout(p=0.0, inplace=False)
          (conv2): Conv2d(640, 640, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (nonlinearity): SiLU()
          (conv_shortcut): Conv2d(960, 640, kernel_size=(1, 1), stride=(1, 1))
        )
      )
      (upsamplers): ModuleList(
        (0): Upsample2D(
          (conv): Conv2d(640, 640, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        )
      )
    )
    (3): CrossAttnUpBlock2D(
      (attentions): ModuleList(
        (0-2): 3 x Transformer2DModel(
          (norm): GroupNorm(32, 320, eps=1e-06, affine=True)
          (proj_in): Conv2d(320, 320, kernel_size=(1, 1), stride=(1, 1))
          (transformer_blocks): ModuleList(
            (0): BasicTransformerBlock(
              (norm1): LayerNorm((320,), eps=1e-05, elementwise_affine=True)
              (attn1): Attention(
                (to_q): Linear(in_features=320, out_features=320, bias=False)
                (to_k): Linear(in_features=320, out_features=320, bias=False)
                (to_v): Linear(in_features=320, out_features=320, bias=False)
                (to_out): ModuleList(
                  (0): Linear(in_features=320, out_features=320, bias=True)
                  (1): Dropout(p=0.0, inplace=False)
                )
                (processor): LoRAAttnProcessor(
                  (to_q_lora): LoRALinearLayer(
                    (down): Linear(in_features=320, out_features=128, bias=False)
                    (up): Linear(in_features=128, out_features=320, bias=False)
                  )
                  (to_k_lora): LoRALinearLayer(
                    (down): Linear(in_features=320, out_features=128, bias=False)
                    (up): Linear(in_features=128, out_features=320, bias=False)
                  )
                  (to_v_lora): LoRALinearLayer(
                    (down): Linear(in_features=320, out_features=128, bias=False)
                    (up): Linear(in_features=128, out_features=320, bias=False)
                  )
                  (to_out_lora): LoRALinearLayer(
                    (down): Linear(in_features=320, out_features=128, bias=False)
                    (up): Linear(in_features=128, out_features=320, bias=False)
                  )
                )
              )
              (norm2): LayerNorm((320,), eps=1e-05, elementwise_affine=True)
              (attn2): Attention(
                (to_q): Linear(in_features=320, out_features=320, bias=False)
                (to_k): Linear(in_features=768, out_features=320, bias=False)
                (to_v): Linear(in_features=768, out_features=320, bias=False)
                (to_out): ModuleList(
                  (0): Linear(in_features=320, out_features=320, bias=True)
                  (1): Dropout(p=0.0, inplace=False)
                )
                (processor): LoRAIPAttnProcessor(
                  (to_q_lora): LoRALinearLayer(
                    (down): Linear(in_features=320, out_features=128, bias=False)
                    (up): Linear(in_features=128, out_features=320, bias=False)
                  )
                  (to_k_lora): LoRALinearLayer(
                    (down): Linear(in_features=768, out_features=128, bias=False)
                    (up): Linear(in_features=128, out_features=320, bias=False)
                  )
                  (to_v_lora): LoRALinearLayer(
                    (down): Linear(in_features=768, out_features=128, bias=False)
                    (up): Linear(in_features=128, out_features=320, bias=False)
                  )
                  (to_out_lora): LoRALinearLayer(
                    (down): Linear(in_features=320, out_features=128, bias=False)
                    (up): Linear(in_features=128, out_features=320, bias=False)
                  )
                  (to_k_ip): Linear(in_features=768, out_features=320, bias=False)
                  (to_v_ip): Linear(in_features=768, out_features=320, bias=False)
                )
              )
              (norm3): LayerNorm((320,), eps=1e-05, elementwise_affine=True)
              (ff): FeedForward(
                (net): ModuleList(
                  (0): GEGLU(
                    (proj): Linear(in_features=320, out_features=2560, bias=True)
                  )
                  (1): Dropout(p=0.0, inplace=False)
                  (2): Linear(in_features=1280, out_features=320, bias=True)
                )
              )
            )
          )
          (proj_out): Conv2d(320, 320, kernel_size=(1, 1), stride=(1, 1))
        )
      )
      (resnets): ModuleList(
        (0): ResnetBlock2D(
          (norm1): GroupNorm(32, 960, eps=1e-05, affine=True)
          (conv1): Conv2d(960, 320, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (time_emb_proj): Linear(in_features=1280, out_features=320, bias=True)
          (norm2): GroupNorm(32, 320, eps=1e-05, affine=True)
          (dropout): Dropout(p=0.0, inplace=False)
          (conv2): Conv2d(320, 320, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (nonlinearity): SiLU()
          (conv_shortcut): Conv2d(960, 320, kernel_size=(1, 1), stride=(1, 1))
        )
        (1-2): 2 x ResnetBlock2D(
          (norm1): GroupNorm(32, 640, eps=1e-05, affine=True)
          (conv1): Conv2d(640, 320, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (time_emb_proj): Linear(in_features=1280, out_features=320, bias=True)
          (norm2): GroupNorm(32, 320, eps=1e-05, affine=True)
          (dropout): Dropout(p=0.0, inplace=False)
          (conv2): Conv2d(320, 320, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (nonlinearity): SiLU()
          (conv_shortcut): Conv2d(640, 320, kernel_size=(1, 1), stride=(1, 1))
        )
      )
    )
  )
  (mid_block): UNetMidBlock2DCrossAttn(
    (attentions): ModuleList(
      (0): Transformer2DModel(
        (norm): GroupNorm(32, 1280, eps=1e-06, affine=True)
        (proj_in): Conv2d(1280, 1280, kernel_size=(1, 1), stride=(1, 1))
        (transformer_blocks): ModuleList(
          (0): BasicTransformerBlock(
            (norm1): LayerNorm((1280,), eps=1e-05, elementwise_affine=True)
            (attn1): Attention(
              (to_q): Linear(in_features=1280, out_features=1280, bias=False)
              (to_k): Linear(in_features=1280, out_features=1280, bias=False)
              (to_v): Linear(in_features=1280, out_features=1280, bias=False)
              (to_out): ModuleList(
                (0): Linear(in_features=1280, out_features=1280, bias=True)
                (1): Dropout(p=0.0, inplace=False)
              )
              (processor): LoRAAttnProcessor(
                (to_q_lora): LoRALinearLayer(
                  (down): Linear(in_features=1280, out_features=128, bias=False)
                  (up): Linear(in_features=128, out_features=1280, bias=False)
                )
                (to_k_lora): LoRALinearLayer(
                  (down): Linear(in_features=1280, out_features=128, bias=False)
                  (up): Linear(in_features=128, out_features=1280, bias=False)
                )
                (to_v_lora): LoRALinearLayer(
                  (down): Linear(in_features=1280, out_features=128, bias=False)
                  (up): Linear(in_features=128, out_features=1280, bias=False)
                )
                (to_out_lora): LoRALinearLayer(
                  (down): Linear(in_features=1280, out_features=128, bias=False)
                  (up): Linear(in_features=128, out_features=1280, bias=False)
                )
              )
            )
            (norm2): LayerNorm((1280,), eps=1e-05, elementwise_affine=True)
            (attn2): Attention(
              (to_q): Linear(in_features=1280, out_features=1280, bias=False)
              (to_k): Linear(in_features=768, out_features=1280, bias=False)
              (to_v): Linear(in_features=768, out_features=1280, bias=False)
              (to_out): ModuleList(
                (0): Linear(in_features=1280, out_features=1280, bias=True)
                (1): Dropout(p=0.0, inplace=False)
              )
              (processor): LoRAIPAttnProcessor(
                (to_q_lora): LoRALinearLayer(
                  (down): Linear(in_features=1280, out_features=128, bias=False)
                  (up): Linear(in_features=128, out_features=1280, bias=False)
                )
                (to_k_lora): LoRALinearLayer(
                  (down): Linear(in_features=768, out_features=128, bias=False)
                  (up): Linear(in_features=128, out_features=1280, bias=False)
                )
                (to_v_lora): LoRALinearLayer(
                  (down): Linear(in_features=768, out_features=128, bias=False)
                  (up): Linear(in_features=128, out_features=1280, bias=False)
                )
                (to_out_lora): LoRALinearLayer(
                  (down): Linear(in_features=1280, out_features=128, bias=False)
                  (up): Linear(in_features=128, out_features=1280, bias=False)
                )
                (to_k_ip): Linear(in_features=768, out_features=1280, bias=False)
                (to_v_ip): Linear(in_features=768, out_features=1280, bias=False)
              )
            )
            (norm3): LayerNorm((1280,), eps=1e-05, elementwise_affine=True)
            (ff): FeedForward(
              (net): ModuleList(
                (0): GEGLU(
                  (proj): Linear(in_features=1280, out_features=10240, bias=True)
                )
                (1): Dropout(p=0.0, inplace=False)
                (2): Linear(in_features=5120, out_features=1280, bias=True)
              )
            )
          )
        )
        (proj_out): Conv2d(1280, 1280, kernel_size=(1, 1), stride=(1, 1))
      )
    )
    (resnets): ModuleList(
      (0-1): 2 x ResnetBlock2D(
        (norm1): GroupNorm(32, 1280, eps=1e-05, affine=True)
        (conv1): Conv2d(1280, 1280, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (time_emb_proj): Linear(in_features=1280, out_features=1280, bias=True)
        (norm2): GroupNorm(32, 1280, eps=1e-05, affine=True)
        (dropout): Dropout(p=0.0, inplace=False)
        (conv2): Conv2d(1280, 1280, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (nonlinearity): SiLU()
      )
    )
  )
  (conv_norm_out): GroupNorm(32, 320, eps=1e-05, affine=True)
  (conv_act): SiLU()
  (conv_out): Conv2d(320, 4, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
)